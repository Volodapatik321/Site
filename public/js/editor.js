let currentVideo = null;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const uploadArea = document.getElementById('uploadArea');
const fileInput = document.getElementById('fileInput');
const previewSection = document.getElementById('previewSection');
const previewVideo = document.getElementById('previewVideo');
const loadingSection = document.getElementById('loadingSection');

// –î–µ–±–∞–≥ —Ñ—É–Ω–∫—Ü–∏—è
function debug(message) {
    console.log('üîß DEBUG:', message);
    alert('üîß ' + message); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
fileInput.addEventListener('change', function() {
    debug('–§–∞–π–ª –≤—ã–±—Ä–∞–Ω –≤ input');
    handleFiles(this.files);
});

function handleFiles(files) {
    debug('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã: ' + files.length);
    
    if (files.length > 0) {
        const file = files[0];
        debug('–§–∞–π–ª: ' + file.name + ' (' + file.type + ')');
        
        if (!file.type.startsWith('video/')) {
            alert('‚ùå –≠—Ç–æ –Ω–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª!');
            return;
        }
        
        if (file.size > 100 * 1024 * 1024) {
            alert('‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å: 100MB');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–≤—å—é
        debug('–°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é...');
        const url = URL.createObjectURL(file);
        previewVideo.src = url;
        previewSection.style.display = 'block';
        uploadArea.style.display = 'none';
        
        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        debug('–ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
        uploadToServer(file);
    }
}

async function uploadToServer(file) {
    debug('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
    loadingSection.style.display = 'block';
    
    const formData = new FormData();
    formData.append('video', file);
    
    try {
        debug('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º fetch –∑–∞–ø—Ä–æ—Å...');
        
        const response = await fetch('/api/upload', {
            method: 'POST',
            body: formData
        });
        
        debug('–ü–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç: ' + response.status);
        
        const data = await response.json();
        debug('–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ' + JSON.stringify(data));
        
        if (data.success) {
            currentVideo = data;
            alert('‚úÖ ' + data.message);
        } else {
            throw new Error(data.error);
        }
    } catch (error) {
        debug('‚ùå –û—à–∏–±–∫–∞: ' + error.message);
        alert('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error.message);
    } finally {
        loadingSection.style.display = 'none';
    }
}

function clearVideo() {
    currentVideo = null;
    previewVideo.src = '';
    previewSection.style.display = 'none';
    uploadArea.style.display = 'block';
    fileInput.value = '';
    debug('–í–∏–¥–µ–æ –æ—á–∏—â–µ–Ω–æ');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
debug('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
